<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoleng.mybatis.common.mapper.TUserMapper">
    <resultMap id="BaseResultMap" type="com.xiaoleng.mybatis.common.domain.entity.TUser">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="real_name" jdbcType="VARCHAR" property="realName"/>
        <result column="sex" jdbcType="TINYINT" property="sex"/>
        <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="note" jdbcType="VARCHAR" property="note"/>
        <result column="position_id" jdbcType="INTEGER" property="positionId"/>
    </resultMap>

    <resultMap id="UserAndPositionResultMap" type="com.xiaoleng.mybatis.common.domain.entity.TUser"
               extends="BaseResultMap">

        <!--推荐使用 resultMap-->
        <!--resultMap="com.xiaoleng.mybatis.common.mapper.TPositionMapper.BaseResultMap"-->
        <association property="tPosition"
                     javaType="com.xiaoleng.mybatis.common.domain.entity.TPosition"
                     columnPrefix="position_">
            <id column="id" jdbcType="INTEGER" property="id"/>
            <result column="post_name" jdbcType="VARCHAR" property="postName"/>
            <result column="note" jdbcType="VARCHAR" property="note"/>
        </association>
    </resultMap>


    <sql id="Base_Column_List">
    id, user_name, real_name, sex, mobile, email, note, position_id
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.xiaoleng.mybatis.common.domain.entity.TUser">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_user (user_name, real_name, sex,
        mobile, email, note,
        position_id)
        values (#{userName,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT},
        #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR},
        #{positionId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.xiaoleng.mybatis.common.domain.entity.TUser">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userName != null">
                user_name,
            </if>
            <if test="realName != null">
                real_name,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="mobile != null">
                mobile,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="note != null">
                note,
            </if>
            <if test="positionId != null">
                position_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                #{realName,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=TINYINT},
            </if>
            <if test="mobile != null">
                #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="note != null">
                #{note,jdbcType=VARCHAR},
            </if>
            <if test="positionId != null">
                #{positionId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xiaoleng.mybatis.common.domain.entity.TUser">
        update t_user
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                real_name = #{realName,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=TINYINT},
            </if>
            <if test="mobile != null">
                mobile = #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="note != null">
                note = #{note,jdbcType=VARCHAR},
            </if>
            <if test="positionId != null">
                position_id = #{positionId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xiaoleng.mybatis.common.domain.entity.TUser">
    update t_user
    set user_name = #{userName,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      position_id = #{positionId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


    <select id="findUserAndPositionByPrimaryKey" parameterType="java.lang.Integer"
            resultMap="UserAndPositionResultMap">
      select tu.id,
       tu.user_name,
       tu.real_name,
       tu.sex,
       tu.mobile,
       tu.email,
       tu.note,
       tu.position_id,
       tp.id as position_id,
       tp.post_name as position_post_name,
       tp.note as position_note
     from t_user tu
       inner join t_position tp on tu.position_id = tp.id
     where tu.id = #{id};
  </select>

</mapper>